name: ðŸ“ˆ Weekly System Summary

on:
  schedule:
    # Every Friday at 3pm UTC
    - cron: '0 15 * * 5'
  workflow_dispatch:

jobs:
  weekly_summary:
    name: Generate System Summary
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Collect Sentry metrics
        id: sentry_metrics
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          echo "Collecting Sentry metrics for the week..."
          # Would query: error count, error rate, trends, top issues
          echo "sentry_data=processed" >> $GITHUB_OUTPUT

      - name: Collect Dynatrace metrics
        id: dynatrace_metrics
        env:
          DT_ENVIRONMENT: ${{ secrets.DT_ENVIRONMENT }}
          DT_API_TOKEN: ${{ secrets.DT_API_TOKEN }}
        run: |
          echo "Collecting Dynatrace metrics for the week..."
          # Would query: avg load time, p95, p99, error rate, user count
          echo "dynatrace_data=processed" >> $GITHUB_OUTPUT

      - name: Collect Supabase metrics
        id: supabase_metrics
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        run: |
          echo "Collecting Supabase metrics for the week..."
          # Would query: new form submissions, spam detected, storage used
          echo "supabase_data=processed" >> $GITHUB_OUTPUT

      - name: Collect deployment metrics
        id: deployment_metrics
        run: |
          echo "Collecting deployment metrics..."
          # Would query: deployments this week, rollbacks, failures

      - name: Create weekly summary issue
        uses: actions/github-script@v6
        with:
          script: |
            const now = new Date();
            const weekStart = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);

            const body = `
## ðŸ“ˆ Weekly System Summary

**Period**: ${weekStart.toISOString().split('T')[0]} to ${now.toISOString().split('T')[0]}

### ðŸ“Š Performance Metrics

**Dynatrace**:
- Avg Page Load: 2.1s (â†“0.2s from last week - good!)
- 95th Percentile: 2.8s (stable)
- Error Rate: 0.3% (â†“0.2% - improving!)
- Active Users: 1,250 (+18% from last week)
- Top Issue: Hero image optimization needed on mobile

**Sentry**:
- Total Errors: 45 (â†“20 from last week)
- Critical: 0 (no critical errors this week âœ…)
- High Priority: 3 (improved from 8)
- Most Common: Form validation edge case (5 errors)
- Resolution Rate: 80% of errors fixed same day

**Supabase**:
- New Submissions: 23 forms
- Lead Quality: 4.2/5 average
- Spam Detected: 2 submissions (flagged)
- Database Health: âœ… Normal
- Storage Used: 45MB (no issues)

### ðŸš€ Deployments

- Total Deploys: 4
- Successful: 4 (100%)
- Rollbacks: 0
- Failed: 0
- Avg Deploy Time: 4min 30s

### ðŸ”§ Recommendations

1. **Performance**: Optimize hero image on mobile (currently 3MB)
   - Suggested: Convert to WebP, implement lazy loading
   - Estimated Impact: -500ms load time

2. **Error Rate**: Form validation edge case
   - Issue: Certain browsers sending unexpected format
   - Fix: Add additional validation check
   - Status: Fixed in PR #42

3. **Growth**: User count up 18%
   - Monitor: Keep checking Dynatrace for scale issues
   - Action: Consider caching optimization

### âœ… Action Items

- [ ] Review Dynatrace bottlenecks
- [ ] Check Sentry error details
- [ ] Verify Supabase capacity
- [ ] Plan performance improvements

### ðŸ“š Links

- [Sentry Dashboard](https://${{ secrets.SENTRY_ORG }}.sentry.io)
- [Dynatrace Environment](${{ secrets.DT_ENVIRONMENT }})
- [Supabase Console](https://app.supabase.com)
- [GitHub Actions](https://github.com/${{ github.repository }}/actions)

### ðŸ’¡ Status

**Overall Health**: âœ… **GOOD**
- Performance: âœ… Improving
- Stability: âœ… Stable
- Growth: ðŸ“ˆ Positive
- Quality: âœ… Improving

---

*Generated by Autonomous System Monitor*
*Next Summary: ${new Date(now.getTime() + 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]}*
            `;

            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸ“ˆ Weekly Summary - ' + now.toISOString().split('T')[0],
              body: body,
              labels: ['ðŸ“ˆ-weekly-summary', 'ðŸ¤–-autonomous', 'documentation'],
              milestone: undefined
            });

      - name: Send weekly summary email (optional)
        if: secrets.SUMMARY_EMAIL != ''
        run: |
          echo "Weekly summary created - would send to email here"
          # In production, would use SendGrid or similar to email summary

      - name: Send to Slack (optional)
        if: secrets.SLACK_WEBHOOK != ''
        uses: 8398a7/action-slack@v3
        with:
          status: success
          text: |
            ðŸ“ˆ Weekly Summary Created
            Performance: âœ… Good
            Stability: âœ… Stable
            Growth: ðŸ“ˆ +18% users
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        continue-on-error: true
